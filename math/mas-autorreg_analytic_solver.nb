(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     61517,       1344]
NotebookOptionsPosition[     59628,       1289]
NotebookOutlinePosition[     59961,       1304]
CellTagsIndexPosition[     59918,       1301]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"pUnrep", " ", ":=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kd", ":=", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", ":=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauR", ":=", "120"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauP", ":=", "3600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gr", ":=", 
   RowBox[{
    RowBox[{"Log", "[", "2", "]"}], "/", "tauR"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp", ":=", 
   RowBox[{
    RowBox[{"Log", "[", "2", "]"}], "/", "tauP"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", ":=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kp", ":=", 
   RowBox[{"b", "*", "gr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"krmax", ":=", 
   RowBox[{"pUnrep", "*", "gr", "*", 
    RowBox[{"gp", "/", "kp"}]}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"kr", "[", 
    RowBox[{"p_", ",", "n_", ",", "Kd_"}], "]"}], ":=", 
   FractionBox["krmax", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["p", "Kd"], ")"}], "n"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Derivkr", "[", 
    RowBox[{"p_", ",", "n_", ",", "Kd_"}], "]"}], ":=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"krmax", " ", "n", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["p", "Kd"], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]]}], 
     RowBox[{"Kd", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["p", "Kd"], ")"}], "n"]}], ")"}], "2"]}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k0", "[", 
    RowBox[{"pAve_", ",", "n_", ",", "Kd_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"kr", "[", 
     RowBox[{"pAve", ",", "n", ",", "Kd"}], "]"}], "-", 
    RowBox[{"pAve", "*", 
     RowBox[{"Derivkr", "[", 
      RowBox[{"pAve", ",", "n", ",", "Kd"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k1", "[", 
    RowBox[{"pAve_", ",", "n_", ",", "Kd_"}], "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"Derivkr", "[", 
     RowBox[{"pAve", ",", "n", ",", "Kd"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pAve", "[", 
   RowBox[{"n_", ",", "Kd_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", ",", "r"}], "}"}], "/.", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0", "\[Equal]", 
        RowBox[{
         RowBox[{"kr", "[", 
          RowBox[{"p", ",", "n", ",", "Kd", ",", "krmax"}], "]"}], "-", 
         RowBox[{"gr", "*", "r"}]}]}], "&&", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{
         RowBox[{"kp", "*", "r"}], "-", 
         RowBox[{"gp", "*", "p"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "r"}], "}"}], ",", "Reals"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"which", "[", 
   RowBox[{"n_", ",", "Kd_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"pAve", "[", 
       RowBox[{"n", ",", "Kd"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pAveA", "[", 
    RowBox[{"k0_", ",", "k1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"b", "*", 
        FractionBox["k1", "gp"]}]}]], ")"}], "*", 
    FractionBox[
     RowBox[{"k0", "*", "b"}], "gp"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fano", "[", "k1_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"1", "-", 
        FractionBox["k1", "gp"]}], 
       RowBox[{"1", "+", 
        RowBox[{"b", "*", 
         FractionBox["k1", "gp"]}]}]], ")"}], "*", 
     FractionBox["b", 
      RowBox[{"1", "+", 
       FractionBox["gp", "gr"]}]]}], "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6655023964478083`*^9, 3.6655024398095827`*^9}, {
   3.665503988942423*^9, 3.66550399301478*^9}, {3.6655047535684147`*^9, 
   3.665504814280919*^9}, {3.66550486935816*^9, 3.665504894097687*^9}, {
   3.6655049845238953`*^9, 3.665505019423007*^9}, {3.665505069739287*^9, 
   3.665505071289322*^9}, {3.665505936105678*^9, 3.665505937023663*^9}, {
   3.665505975304854*^9, 3.665505999574853*^9}, 3.665506685688108*^9, {
   3.665564022393827*^9, 3.665564023627062*^9}, 3.665564122055414*^9, {
   3.6655641787338142`*^9, 3.665564179015312*^9}, {3.665564269638906*^9, 
   3.6655642739104843`*^9}, {3.665564354221624*^9, 3.665564355229142*^9}, {
   3.666392985901361*^9, 3.666393006352401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"toplotN", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"which", "[", 
        RowBox[{"n", ",", "Kd"}], "]"}], ",", 
       RowBox[{"fano", "[", 
        RowBox[{"k1", "[", 
         RowBox[{
          RowBox[{"which", "[", 
           RowBox[{"n", ",", "Kd"}], "]"}], ",", "n", ",", "Kd"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "20", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toplotKd", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"which", "[", 
        RowBox[{"n", ",", "Kd"}], "]"}], ",", 
       RowBox[{"fano", "[", 
        RowBox[{"k1", "[", 
         RowBox[{
          RowBox[{"which", "[", 
           RowBox[{"n", ",", "Kd"}], "]"}], ",", "n", ",", "Kd"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Kd", ",", "0", ",", "5000", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.665564467296977*^9, 3.665564499343802*^9}, {
  3.6655645356352053`*^9, 3.665564558255192*^9}, {3.665564642453126*^9, 
  3.665564645720348*^9}, {3.6655647105846367`*^9, 3.665564716739613*^9}, {
  3.665564779992144*^9, 3.665564875031271*^9}, {3.6655690611375732`*^9, 
  3.665569073284422*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NSolve[\\(\\(\\(\\(\\(\\(0 \[Equal] \
\\(\\(\\(\\(kr[\\(\\(p, 0.`, 800, \\(\\(1\\/30\\\\ \\(\\(Log[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\\) - \
\\(\\(1\\/120\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\) && \\(\\(0 \
\[Equal] \\(\\(\\(\\(-\\(\\(\\(p\\\\ \\(\\(Log[2]\\)\\)\\)\\/3600\\)\\)\\)\\) \
+ \\(\\(1\\/12\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\({p, r}\\)\\), Reals\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666392999878072*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceAll\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ReplaceAll::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666392999939636*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\(ReplaceAll[]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666392999997757*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NSolve[\\(\\(\\(\\(\\(\\(0 \[Equal] \
\\(\\(\\(\\(kr[\\(\\(p, 0.`, 800, \\(\\(1\\/30\\\\ \\(\\(Log[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\\) - \
\\(\\(1\\/120\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\) && \\(\\(0 \
\[Equal] \\(\\(\\(\\(-\\(\\(\\(p\\\\ \\(\\(Log[2]\\)\\)\\)\\/3600\\)\\)\\)\\) \
+ \\(\\(1\\/12\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\({p, r}\\)\\), Reals\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393000071877*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceAll\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ReplaceAll::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393000137246*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\(ReplaceAll[]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.66639300019689*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NSolve[\\(\\(\\(\\(\\(\\(0 \[Equal] \
\\(\\(\\(\\(kr[\\(\\(p, 0.5`, 800, \\(\\(1\\/30\\\\ \\(\\(Log[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\\) - \
\\(\\(1\\/120\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\) && \\(\\(0 \
\[Equal] \\(\\(\\(\\(-\\(\\(\\(p\\\\ \\(\\(Log[2]\\)\\)\\)\\/3600\\)\\)\\)\\) \
+ \\(\\(1\\/12\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\({p, r}\\)\\), Reals\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393000273211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393000329319*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceAll\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ReplaceAll::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393000434759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: argt\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.66639300043651*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\(ReplaceAll[]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393000507174*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.66639300056627*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
NSolve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003437396*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NSolve[\\(\\(\\(\\(\\(\\(0 \[Equal] \
\\(\\(\\(\\(kr[\\(\\(p, 2, 0, \\(\\(1\\/30\\\\ \
\\(\\(Log[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\\) - \\(\\(1\\/120\\\\ r\\\\ \
\\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\) && \\(\\(0 \[Equal] \
\\(\\(\\(\\(-\\(\\(\\(p\\\\ \\(\\(Log[2]\\)\\)\\)\\/3600\\)\\)\\)\\) + \
\\(\\(1\\/12\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\)\\)\\), \\(\\({p, \
r}\\)\\), Reals\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.6663930034852457`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceAll\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ReplaceAll::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003555067*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\(ReplaceAll[]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003637237*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
NSolve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003799222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NSolve[\\(\\(\\(\\(\\(\\(0 \[Equal] \
\\(\\(\\(\\(kr[\\(\\(p, 2, 0, \\(\\(1\\/30\\\\ \
\\(\\(Log[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\\) - \\(\\(1\\/120\\\\ r\\\\ \
\\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\) && \\(\\(0 \[Equal] \
\\(\\(\\(\\(-\\(\\(\\(p\\\\ \\(\\(Log[2]\\)\\)\\)\\/3600\\)\\)\\)\\) + \
\\(\\(1\\/12\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\)\\)\\), \\(\\({p, \
r}\\)\\), Reals\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003859168*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceAll\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ReplaceAll::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003918466*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\(ReplaceAll[]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393003998063*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393004184291*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393004237754*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393004298766*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
NSolve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393004439375*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NSolve :: \
nsmet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.6663930044813232`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NSolve[\\(\\(\\(\\(\\(\\(0 \[Equal] \
\\(\\(\\(\\(kr[\\(\\(p, 2, 100, \\(\\(1\\/30\\\\ \\(\\(Log[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\\) - \
\\(\\(1\\/120\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\) && \\(\\(0 \
\[Equal] \\(\\(\\(\\(-\\(\\(\\(p\\\\ \\(\\(Log[2]\\)\\)\\)\\/3600\\)\\)\\)\\) \
+ \\(\\(1\\/12\\\\ r\\\\ \\(\\(Log[2]\\)\\)\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\({p, r}\\)\\), Reals\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.6663930045345907`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393004590002*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "argt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceAll\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argt\\\", \
ButtonNote -> \\\"ReplaceAll::argt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.6663930046455*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: argt\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.66639300470017*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\(ReplaceAll[]\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.666393004778386*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665564893575511*^9, 3.666392828439308*^9, 
  3.6663930048313932`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"toplotN", ",", "toplotKd"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6655646942267237`*^9, 3.665564695600719*^9}, {
  3.665564744466208*^9, 3.665564749949791*^9}, {3.665564783824709*^9, 
  3.665564787833775*^9}, {3.6655649104104843`*^9, 3.665564916211356*^9}, {
  3.665568816603175*^9, 3.665568820301394*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", 
   RowBox[{
   "Import", "[", "\"\</home/gutiloluis/61Monograph/gillespie/n.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KD", "=", 
   RowBox[{
   "Import", "[", "\"\</home/gutiloluis/61Monograph/gillespie/Kd.dat\>\"", 
    "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"NN", ",", "KD"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "12"}], "}"}], "PlotLegends"}], "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<b\>\"", ",", "\"\<\!\(\*SubscriptBox[\(k\), \(r\)]\)\>\"", 
             ",", "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(p\)]\)\>\""}], "}"}], 
           ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
            RowBox[{"{", "30", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino Linotype\>\""}], 
              ",", "35"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Row\>\"", ",", "3"}], "}"}]}], ",", 
           RowBox[{"Spacings", "\[Rule]", "0.2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.88", ",", "0.2"}], "}"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p2", ",", "p3"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{
          "\"\<\\\\langle p\\\\rangle\>\"", ",", "TeXForm", ",", "HoldForm"}],
           "]"}], ",", "Large"}], "]"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{
          "\"\<\\\\frac{\\\\sigma_p^2}{\\\\langle p\\\\rangle}\>\"", ",", 
           "TeXForm", ",", "HoldForm"}], "]"}], ",", "30"}], "]"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"18", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino Linotype\>\""}], ",", 
      "Black"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6655687992571*^9, 3.665568846811529*^9}, 
   3.6663928120450993`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAADAgkBba6211lolQEIJHMV4
1YNAtgM/MMZLIUDspFl5Z5KEQLsqgRVidx1A8r8DqgodhUDVMreKr9kZQHW2
pJDVh4VAkB1rC9wfF0DBnBaU+tyFQLoghy4R+hRAljU1iKQihkDqFDleBjsT
QJfc6EPOXIZATID8Z9DGEUA+O9RVKo6GQMytKJIgixBA+CHxOZ+4hkAiIiOI
wPYOQMM2loqO3YZApFXdXSUdDUDd6+EIAP6GQIc97Fc0fAtA7Io0x7wah0D/
IU0i8AkKQGqTHPFgNIdAMhaGdqS+CECDn2nLZ0uHQNI3rl5ElAdA3enKBDRg
h0Csj2gd/IUGQKIY1poVc4dAggq/QeSPBUAutoAdToSHQGj1EKzKrgRAWaS9
0hOUh0A9eiR3CuADQHWqnQ+UoodAxciXN24hA0CQlmoA9a+HQMLYr40ZcQJA
1IIzB1e8h0By18H+d80BQMoHYszVx4dAVPQYrS81AUAFMfQUidKHQGXGXfAW
pwBAoQGAbIXch0DWKPAYLCIAQGjjV63c5YdAxMXztB1L/z8vgXdunu6HQGzV
tvn1YP4/6Gj0XNj2h0BG/6MWiIT9P98tSYWW/odA/n0Il6O0/D8pacuP4wWI
QEsDOqY68Ps/Qizb8sgMiEBeb1o4XTb7PxwayRxPE4hA9tVd/zSG+j/HNQKX
fRmIQNtmxAUC3/k/nb68I1sfiEBHO6LQF0D5P4bpINftJIhA1XLQ8Nqo+D9f
TbYsOyqIQBi1+O++GPg/udO3GUgviEDGLfCJRI/3P4RT0RwZNIhAqmnLJfgL
9z/ftrFLsjiIQD3kaYRwjvY/VTzJXhc9iEChCROcTRb2PxXse7tLQYhAJlU6
mjej9T+jGS0+
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAIJEd7O3MakC7s66T6D0QQP8hTAz4
bXRAf15xutR4EUDaK5diOdp5QAhOVJGyjhJADbgTq9VVfkDPMfwdF5ATQCYG
vOAWFYFAOC2Nm0yDFEABAAAAAMCCQGyttdZaaxVAJ6sQdpg4hEBUE97S5EkW
QHW2pJDVh4VAkB1rC9wfF0AAOd4nSrSGQP9ptu/R7RdAcNshKf/Ch0D2SY7H
IbQYQEfGz0vwt4hAfP6qGghzGUBTO4nPWJaJQLeL2IGwKhpAYZhKP+VgikA1
f6wUPtsaQGziER3VGYtAUJK5ndCEG0CS2KB9EsOLQI3om8iHJxxAq74VGUNe
jECchor/hMMcQFZXTfXU7IxAeADSaexYHUAsKw4FCHCNQGuuS1Xl5x1AmZ1H
nvXojUDKHP88mnAeQIxbAF+WWI5Ay8LTjzjzHkCG5fXoxr+OQNJy/k/wbx9A
IfHMvEsfj0CV17ac8+YfQPpT3mjUd49AFBhSGTssIEBrwXQx/smPQNji13VW
YiBAClE3JysLkEB+xxCi5pUgQDKFnumtLpBAW0RrdAbHIEAPF5yowE+QQM/z
aajQ9SBAIkRPIJdukED8VKuxXyIhQKrt8hxgi5BA2TlWlc1MIUAlkYIDRqaQ
QLxkx8kzdSFA481tSW+/kEAaICscq5shQLOM2N3+1pBAe0yOm0vAIUALSnOG
FO2QQFPr4Igs4yFAn0OdMc0BkUCy6lxLZAQiQO4qOz9DFZFAWwDEaAgkIkDn
BHTBjieRQAF57IAtQiJAyrpXtsU4kUBEQh1M514iQCskTTv8SJFAfNLDm0h6
IkBwKAa7RFiRQK3rGV1jlCJAf6OeFrBmkUDb2VydSK0iQCvudMpNdJFAZThD
jwjFIkAIfzgPLIGRQLgoaZGy2yJAt2ib91eNkUDxAHU1VfEiQHEOBovdmJFA
QLW/R/4FI0CD2aDdx6ORQPiOVNe6GSNAmb/9JSGukUC9JyM+lywjQG++otDy
t5FAux5FKZ8+I0Dl566RRcGRQA2nPqHdTyNAoAHNdCHKkUCr8SUSXWAjQBH4
oOuN0pFAWKWhUydwI0DQomZt
       "]]}}, {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAZDvfT425gkBcV8wIby8lQOtztRX7
moRA/isrTUqxHUA5tMh2PouFQGYQH9jxPxdARrbz/VQlhkABofXwZVITQOhq
K/aXlIZA6/1GO254EECHFtnOd9aGQIQPJVryWA1AmEwVjEoRh0BCeLRxxPoK
QLmNBvCWP4dAy2d5HtydCEC1FfvLbmyHQM0+j1GeWQZAPSzUmuaGh0DVITfD
DbgEQAWjkjoBoYdASG3i5H7nA0DDZKpg1LyHQDSFzmvsUgJAXwfOGVHMh0Dq
lh3iH/YAQMUgsHLo34dAyVUsflOYAECNKO0NPu6HQK98lufBnf8/3NeBc8bz
h0CGAyFZwMT+Pxe30QBeBIhAM8LbgxDQ/D/GbTSANw2IQPD6zFmf8vo/gnNG
lHYViEBnYyXmWQn7P6W9wRcmIIhApmPOM/bl+T9eukkMAieIQG+6ZYf4B/k/
mSWeUQ==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf9sNYz3+v/HhJMdthjkGiifZtAYdOx4SnF+aX
OMS1aJ5aWijkYCJoZrP3S6VDzduZqoxWQg5GoQZaK4vrHDrfRV7PeCnsEOd9
gt1WutHhspD24on5Ig6zZs6cKXmtyeFvFp/AmUIxh0a1Q23qLi0Os1hvyQb1
iDnMt9G5Mquv1WGpwfvCZZXiDr4tvP7rd7Q5lBZ/3G77UdwhocxfbtqxdocH
aR+TEiMkHb56Rbbt2Nvh8OfwNDnfr5IOvp/7gksmdTq8O3crV9xL0qFZ32dZ
V0KXg/COUnP/VikH6Xlxmqfluh1cAhf4P3kp5SB1IFrh4Nluh6hPFVF1H2Qc
Dloqe/1O6HFotYs41uYn6zB9An+V2cceh1mcbcW8wbIOTHtYhUSKeh3mdO9/
y3lI1iF64/43cq97HcI8U+RTMuUc3KZ8Y7sf3Odw6tfZIyUL5Ry2nCjbd3/J
BIf5E+Zu3yio6KBlNel0fdREh1y59oN/eJUdnojInlx6caJDQ0Kf3H53ZQcA
4CSlHQ==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{199.9316283947001, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     InterpretationBox[
      Cell[
       BoxData[
        FormBox[
         StyleBox[
          TagBox[
           RowBox[{"\[LeftAngleBracket]", "p", "\[RightAngleBracket]"}], 
           HoldForm], Large, StripOnInput -> False], TextForm]], 
       "InlineText"], 
      Text[
       Style[
        HoldForm[
         AngleBracket[$CellContext`p]], Large]]], TraditionalForm], 
    FormBox[
     InterpretationBox[
      Cell[
       BoxData[
        FormBox[
         StyleBox[
          TagBox[
           FractionBox[
            SubsuperscriptBox["\[Sigma]", "p", "2"], 
            RowBox[{"\[LeftAngleBracket]", "p", "\[RightAngleBracket]"}]], 
           HoldForm], 30, StripOnInput -> False], TextForm]], "InlineText"], 
      Text[
       Style[
        HoldForm[
        Subscript[$CellContext`\[Sigma], $CellContext`p]^2/
         AngleBracket[$CellContext`p]], 30]]], TraditionalForm]},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  LabelStyle->Directive[18, FontFamily -> "Palatino Linotype", 
    GrayLevel[0]],
  Method->{},
  PlotRange->{{214.40404325270447`, 1140.6385941649826`}, {
    0, 10.67741935483871}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  RotateLabel->False,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.665568848903494*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
i9f/AeoItfE=\
\>"]]
}, Open  ]]
},
WindowSize->{1366, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 942, 29, 231, "Input"],
Cell[1503, 51, 4035, 122, 445, "Input"],
Cell[CellGroupData[{
Cell[5563, 177, 1374, 39, 55, "Input"],
Cell[6940, 218, 1014, 17, 72, "Message"],
Cell[7957, 237, 619, 12, 23, "Message"],
Cell[8579, 251, 522, 11, 23, "Message"],
Cell[9104, 264, 1014, 17, 72, "Message"],
Cell[10121, 283, 619, 12, 23, "Message"],
Cell[10743, 297, 521, 11, 23, "Message"],
Cell[11267, 310, 1015, 17, 72, "Message"],
Cell[12285, 329, 580, 12, 23, "Message"],
Cell[12868, 343, 619, 12, 23, "Message"],
Cell[13490, 357, 579, 12, 23, "Message"],
Cell[14072, 371, 522, 11, 23, "Message"],
Cell[14597, 384, 574, 12, 23, "Message"],
Cell[15174, 398, 481, 11, 23, "Message"],
Cell[15658, 411, 1014, 18, 72, "Message"],
Cell[16675, 431, 619, 12, 23, "Message"],
Cell[17297, 445, 522, 11, 23, "Message"],
Cell[17822, 458, 481, 11, 23, "Message"],
Cell[18306, 471, 1012, 18, 72, "Message"],
Cell[19321, 491, 619, 12, 23, "Message"],
Cell[19943, 505, 522, 11, 23, "Message"],
Cell[20468, 518, 492, 11, 50, "Message"],
Cell[20963, 531, 492, 11, 50, "Message"],
Cell[21458, 544, 522, 11, 23, "Message"],
Cell[21983, 557, 481, 11, 23, "Message"],
Cell[22467, 570, 579, 12, 23, "Message"],
Cell[23049, 584, 1014, 17, 72, "Message"],
Cell[24066, 603, 580, 12, 23, "Message"],
Cell[24649, 617, 617, 12, 23, "Message"],
Cell[25269, 631, 579, 12, 23, "Message"],
Cell[25851, 645, 522, 11, 23, "Message"],
Cell[26376, 658, 577, 12, 23, "Message"]
}, Open  ]],
Cell[26968, 673, 498, 11, 32, "Input"],
Cell[27469, 686, 328, 10, 55, "Input"],
Cell[CellGroupData[{
Cell[27822, 700, 2526, 67, 210, "Input"],
Cell[30351, 769, 29261, 517, 526, 5479, 125, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
